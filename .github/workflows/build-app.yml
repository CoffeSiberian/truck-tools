name: build-app

on:
    push:
        branches:
            - main
        paths:
            - version

permissions:
    contents: write

env:
    APP_NAME: Truck Tools
    APP_BUILD_TARGET: x64-setup

jobs:
    build_windows:
        runs-on: windows-latest

        env:
            TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
            TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

        steps:
            - uses: actions/checkout@v4

            - name: Get version
              run: echo "APP_VERSION=$(type version)" | Out-File -Append -FilePath $env:GITHUB_ENV -Encoding utf8

            - name: Set FILE_NAME
              run: echo "FILE_NAME=${{ env.APP_NAME }}_${{ env.APP_VERSION }}_${{ env.APP_BUILD_TARGET }}" | Out-File -Append -FilePath $env:GITHUB_ENV -Encoding utf8

            - name: Install NodeJS
              uses: actions/setup-node@v4
              with:
                  node-version: lts/*

            - name: Install Rust stable
              uses: dtolnay/rust-toolchain@stable

            - name: Install dependencies
              run: npm install

            - name: Build app
              run: npm run tauri build

            - name: Upload artifact MSI
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ env.FILE_NAME }}.msi
                  path: src-tauri/target/release/bundle/msi/${{ env.FILE_NAME }}.msi

            - name: Upload artifact MSI SIG
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ env.FILE_NAME }}.msi.sig
                  path: src-tauri/target/release/bundle/msi/${{ env.FILE_NAME }}.msi.sig

    upload_release:
        runs-on: ubuntu-latest

        needs: [build_windows]

        env:
            APP_NAME_W_S: Truck_Tools

        steps:
            - uses: actions/checkout@v4

            - name: Get the version
              run: echo "APP_VERSION=$(cat version)" >> $GITHUB_ENV

            - name: Set FILE_NAME
              run: echo "FILE_NAME=${{ env.APP_NAME }}_${{ env.APP_VERSION }}_${{ env.APP_BUILD_TARGET }}" >> $GITHUB_ENV

            - name: Set FILE_NAME_W_S
              run: echo "FILE_NAME_W_S=${{ env.APP_NAME_W_S }}_${{ env.APP_VERSION }}_${{ env.APP_BUILD_TARGET }}" >> $GITHUB_ENV

            - name: Download artifact MSI
              uses: actions/download-artifact@v4
              with:
                  name: ${{ env.FILE_NAME }}.msi

            - name: Rename artifact MSI
              run: |
                  mv "${{ env.FILE_NAME }}.msi" "${{ env.FILE_NAME_W_S }}.msi"

            - name: Download artifact MSI SIG
              uses: actions/download-artifact@v4
              with:
                  name: ${{ env.FILE_NAME }}.msi.sig

            - name: Rename artifact MSI SIG
              run: |
                  mv "${{ env.FILE_NAME }}.msi.sig" "${{ env.FILE_NAME_W_S }}.msi.sig"

            - name: Release
              uses: softprops/action-gh-release@v2
              with:
                  name: Release ${{ env.APP_VERSION }}
                  tag_name: ${{ env.APP_VERSION }}
                  draft: true
                  files: |
                      ${{ env.FILE_NAME_W_S }}.msi
                      ${{ env.FILE_NAME_W_S }}.msi.sig
